{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": [
    "plugin:react/recommended",
    "airbnb",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "react-hooks", "@typescript-eslint", "prettier"],
  "rules": {
    "@typescript-eslint/no-non-null-assertion": "off",
    "react/no-array-index-key": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/require-default-props": "off",
    "prettier/prettier": "error",
    "react/jsx-indent": "off",
    "react/jsx-indent-props": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/jsx-filename-extension": [1, { "extensions": [".tsx", ".svg"] }],
    "react/jsx-props-no-spreading": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/prop-types": "off",
    "no-unused-expressions": "off",
    "no-param-reassign": "off",
    "no-shadow": "off",
    "camelcase": "off",
    "import/prefer-default-export": "off",
    "import/no-duplicates": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/ban-ts-ignore": "off",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    "import/no-unresolved": "off",
    "no-console": ["warn", { "allow": ["info", "clear"] }],
    "no-underscore-dangle": "off",
    "@typescript-eslint/explicit-module-boundary-types": [
      "error",
      {
        "allowedNames": ["useBloc", "useCardList", "useFileUpload", "use*"]
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.js",
          "**/*.spec.js",
          "**/*.spec.jsx",
          "**/*.test.ts",
          "**/*.spec.ts",
          "**/*.spec.tsx",
          "**/mocks/*",
          "src/setupTests.ts",
          "vite.config.ts"
        ],
        "bundledDependencies": [
          "**/*.test.js",
          "**/*.spec.js",
          "**/*.spec.jsx",
          "**/*.test.ts",
          "**/*.spec.ts",
          "**/*.spec.tsx",
          "**/mocks/*",
          "src/setupTests.ts",
          "vite.config.ts"
        ],
        "peerDependencies": [
          "**/*.test.js",
          "**/*.spec.js",
          "**/*.spec.jsx",
          "**/*.test.ts",
          "**/*.spec.ts",
          "**/*.spec.tsx",
          "**/mocks/*",
          "src/setupTests.ts",
          "vite.config.ts"
        ],
        "optionalDependencies": [
          "**/*.test.js",
          "**/*.spec.js",
          "**/*.spec.jsx",
          "**/*.test.ts",
          "**/*.spec.ts",
          "**/*.spec.tsx",
          "**/mocks/*",
          "src/setupTests.ts",
          "vite.config.ts"
        ]
      }
    ],
    "react/jsx-wrap-multilines": [
      "warn",
      { "declaration": false, "assignment": false }
    ],
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_"
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  },
  "settings": {
    "react": { "version": "detect" },
    "import/resolver": {
      "typescript": {}
    }
  }
}
